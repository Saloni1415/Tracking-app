import { NgZone, ElementRef, AfterViewInit, OnDestroy, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SwiperDirective } from './swiper.directive';
import { SwiperConfigInterface } from './swiper.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class SwiperComponent implements AfterViewInit, OnDestroy {
    private zone;
    private cdRef;
    private platformId;
    private defaults;
    private mo;
    swiperConfig: any;
    paginationBackup: any;
    paginationConfig: any;
    index: number | null;
    disabled: boolean;
    performance: boolean;
    config?: SwiperConfigInterface;
    useSwiperClass: boolean;
    indexChange: EventEmitter<number>;
    swiperSlides?: ElementRef;
    directiveRef?: SwiperDirective;
    get isAtLast(): boolean;
    get isAtFirst(): boolean;
    S_INIT: EventEmitter<any>;
    S_BEFOREDESTROY: EventEmitter<any>;
    S_SCROLL: EventEmitter<any>;
    S_PROGRESS: EventEmitter<any>;
    S_KEYPRESS: EventEmitter<any>;
    S_RESIZE: EventEmitter<any>;
    S_BREAKPOINT: EventEmitter<any>;
    S_ZOOMCHANGE: EventEmitter<any>;
    S_AFTERRESIZE: EventEmitter<any>;
    S_BEFORERESIZE: EventEmitter<any>;
    S_BEFORELOOPFIX: EventEmitter<any>;
    S_LOOPFIX: EventEmitter<any>;
    S_SLIDERMOVE: EventEmitter<any>;
    S_SLIDECHANGE: EventEmitter<any>;
    S_SETTRANSLATE: EventEmitter<any>;
    S_SETTRANSITION: EventEmitter<any>;
    S_FROMEDGE: EventEmitter<any>;
    S_REACHEND: EventEmitter<any>;
    S_REACHBEGINNING: EventEmitter<any>;
    S_AUTOPLAY: EventEmitter<any>;
    S_AUTOPLAYSTART: EventEmitter<any>;
    S_AUTOPLAYSTOP: EventEmitter<any>;
    S_IMAGESREADY: EventEmitter<any>;
    S_LAZYIMAGELOAD: EventEmitter<any>;
    S_LAZYIMAGEREADY: EventEmitter<any>;
    S_SCROLLDRAGEND: EventEmitter<any>;
    S_SCROLLDRAGMOVE: EventEmitter<any>;
    S_SCROLLDRAGSTART: EventEmitter<any>;
    S_NAVIGATIONHIDE: EventEmitter<any>;
    S_NAVIGATIONSHOW: EventEmitter<any>;
    S_PAGINATIONRENDER: EventEmitter<any>;
    S_PAGINATIONUPDATE: EventEmitter<any>;
    S_PAGINATIONHIDE: EventEmitter<any>;
    S_PAGINATIONSHOW: EventEmitter<any>;
    S_TAP: EventEmitter<any>;
    S_CLICK: EventEmitter<any>;
    S_DOUBLETAP: EventEmitter<any>;
    S_TOUCHEND: EventEmitter<any>;
    S_TOUCHMOVE: EventEmitter<any>;
    S_TOUCHSTART: EventEmitter<any>;
    S_TOUCHMOVEOPPOSITE: EventEmitter<any>;
    S_TRANSITIONEND: EventEmitter<any>;
    S_TRANSITIONSTART: EventEmitter<any>;
    S_SLIDEPREVTRANSITIONEND: EventEmitter<any>;
    S_SLIDEPREVTRANSITIONSTART: EventEmitter<any>;
    S_SLIDENEXTTRANSITIONEND: EventEmitter<any>;
    S_SLIDENEXTTRANSITIONSTART: EventEmitter<any>;
    S_SLIDECHANGETRANSITIONEND: EventEmitter<any>;
    S_SLIDECHANGETRANSITIONSTART: EventEmitter<any>;
    constructor(zone: NgZone, cdRef: ChangeDetectorRef, platformId: Object, defaults: SwiperConfigInterface);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    getConfig(): SwiperConfigInterface;
    private updateClasses;
    onPaginationClick(index: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SwiperComponent, [null, null, null, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SwiperComponent, "swiper", ["ngxSwiper"], { "index": "index"; "disabled": "disabled"; "performance": "performance"; "useSwiperClass": "useSwiperClass"; "config": "config"; }, { "indexChange": "indexChange"; "S_INIT": "init"; "S_BEFOREDESTROY": "beforeDestroy"; "S_SCROLL": "scroll"; "S_PROGRESS": "progress"; "S_KEYPRESS": "keyPress"; "S_RESIZE": "resize"; "S_BREAKPOINT": "breakpoint"; "S_ZOOMCHANGE": "zoomChange"; "S_AFTERRESIZE": "afterResize"; "S_BEFORERESIZE": "beforeResize"; "S_BEFORELOOPFIX": "beforeLoopFix"; "S_LOOPFIX": "loopFix"; "S_SLIDERMOVE": "sliderMove"; "S_SLIDECHANGE": "slideChange"; "S_SETTRANSLATE": "setTranslate"; "S_SETTRANSITION": "setTransition"; "S_FROMEDGE": "fromEdge"; "S_REACHEND": "reachEnd"; "S_REACHBEGINNING": "reachBeginning"; "S_AUTOPLAY": "autoplay"; "S_AUTOPLAYSTART": "autoplayStart"; "S_AUTOPLAYSTOP": "autoplayStop"; "S_IMAGESREADY": "imagesReady"; "S_LAZYIMAGELOAD": "lazyImageLoad"; "S_LAZYIMAGEREADY": "lazyImageReady"; "S_SCROLLDRAGEND": "scrollDragEnd"; "S_SCROLLDRAGMOVE": "scrollDragMove"; "S_SCROLLDRAGSTART": "scrollDragStart"; "S_NAVIGATIONHIDE": "navigationHide"; "S_NAVIGATIONSHOW": "navigationShow"; "S_PAGINATIONRENDER": "paginationRender"; "S_PAGINATIONUPDATE": "paginationUpdate"; "S_PAGINATIONHIDE": "paginationHide"; "S_PAGINATIONSHOW": "paginationShow"; "S_TAP": "swiperTap"; "S_CLICK": "swiperClick"; "S_DOUBLETAP": "swiperDoubleTap"; "S_TOUCHEND": "swiperTouchEnd"; "S_TOUCHMOVE": "swiperTouchMove"; "S_TOUCHSTART": "swiperTouchStart"; "S_TOUCHMOVEOPPOSITE": "swiperTouchMoveOpposite"; "S_TRANSITIONEND": "swiperTransitionEnd"; "S_TRANSITIONSTART": "swiperTransitionStart"; "S_SLIDEPREVTRANSITIONEND": "slidePrevTransitionEnd"; "S_SLIDEPREVTRANSITIONSTART": "slidePrevTransitionStart"; "S_SLIDENEXTTRANSITIONEND": "slideNextTransitionEnd"; "S_SLIDENEXTTRANSITIONSTART": "slideNextTransitionStart"; "S_SLIDECHANGETRANSITIONEND": "slideChangeTransitionEnd"; "S_SLIDECHANGETRANSITIONSTART": "slideChangeTransitionStart"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpcGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzd2lwZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBFbGVtZW50UmVmLCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciwgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN3aXBlckRpcmVjdGl2ZSB9IGZyb20gJy4vc3dpcGVyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTd2lwZXJDb25maWdJbnRlcmZhY2UgfSBmcm9tICcuL3N3aXBlci5pbnRlcmZhY2VzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIFN3aXBlckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHByaXZhdGUgY2RSZWY7XG4gICAgcHJpdmF0ZSBwbGF0Zm9ybUlkO1xuICAgIHByaXZhdGUgZGVmYXVsdHM7XG4gICAgcHJpdmF0ZSBtbztcbiAgICBzd2lwZXJDb25maWc6IGFueTtcbiAgICBwYWdpbmF0aW9uQmFja3VwOiBhbnk7XG4gICAgcGFnaW5hdGlvbkNvbmZpZzogYW55O1xuICAgIGluZGV4OiBudW1iZXIgfCBudWxsO1xuICAgIGRpc2FibGVkOiBib29sZWFuO1xuICAgIHBlcmZvcm1hbmNlOiBib29sZWFuO1xuICAgIGNvbmZpZz86IFN3aXBlckNvbmZpZ0ludGVyZmFjZTtcbiAgICB1c2VTd2lwZXJDbGFzczogYm9vbGVhbjtcbiAgICBpbmRleENoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgc3dpcGVyU2xpZGVzPzogRWxlbWVudFJlZjtcbiAgICBkaXJlY3RpdmVSZWY/OiBTd2lwZXJEaXJlY3RpdmU7XG4gICAgZ2V0IGlzQXRMYXN0KCk6IGJvb2xlYW47XG4gICAgZ2V0IGlzQXRGaXJzdCgpOiBib29sZWFuO1xuICAgIFNfSU5JVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19CRUZPUkVERVNUUk9ZOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NDUk9MTDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19QUk9HUkVTUzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19LRVlQUkVTUzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19SRVNJWkU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQlJFQUtQT0lOVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19aT09NQ0hBTkdFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0FGVEVSUkVTSVpFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0JFRk9SRVJFU0laRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19CRUZPUkVMT09QRklYOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0xPT1BGSVg6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0xJREVSTU9WRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TTElERUNIQU5HRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TRVRUUkFOU0xBVEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0VUVFJBTlNJVElPTjogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19GUk9NRURHRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19SRUFDSEVORDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19SRUFDSEJFR0lOTklORzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19BVVRPUExBWTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19BVVRPUExBWVNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0FVVE9QTEFZU1RPUDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19JTUFHRVNSRUFEWTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19MQVpZSU1BR0VMT0FEOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0xBWllJTUFHRVJFQURZOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NDUk9MTERSQUdFTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0NST0xMRFJBR01PVkU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0NST0xMRFJBR1NUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX05BVklHQVRJT05ISURFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX05BVklHQVRJT05TSE9XOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1BBR0lOQVRJT05SRU5ERVI6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUEFHSU5BVElPTlVQREFURTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19QQUdJTkFUSU9OSElERTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19QQUdJTkFUSU9OU0hPVzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19UQVA6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQ0xJQ0s6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfRE9VQkxFVEFQOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RPVUNIRU5EOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RPVUNITU9WRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19UT1VDSFNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RPVUNITU9WRU9QUE9TSVRFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RSQU5TSVRJT05FTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfVFJBTlNJVElPTlNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFUFJFVlRSQU5TSVRJT05FTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0xJREVQUkVWVFJBTlNJVElPTlNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFTkVYVFRSQU5TSVRJT05FTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0xJREVORVhUVFJBTlNJVElPTlNUQVJUOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFQ0hBTkdFVFJBTlNJVElPTkVORDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TTElERUNIQU5HRVRSQU5TSVRJT05TVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgY29uc3RydWN0b3Ioem9uZTogTmdab25lLCBjZFJlZjogQ2hhbmdlRGV0ZWN0b3JSZWYsIHBsYXRmb3JtSWQ6IE9iamVjdCwgZGVmYXVsdHM6IFN3aXBlckNvbmZpZ0ludGVyZmFjZSk7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbiAgICBnZXRDb25maWcoKTogU3dpcGVyQ29uZmlnSW50ZXJmYWNlO1xuICAgIHByaXZhdGUgdXBkYXRlQ2xhc3NlcztcbiAgICBvblBhZ2luYXRpb25DbGljayhpbmRleDogbnVtYmVyKTogdm9pZDtcbn1cbiJdfQ==